
# Set up workspace
```{r message = FALSE, warning = FALSE}
# Set directory for knitr to save the html
knitr::opts_knit$set(root.dir = "C:/Users/mnale/OneDrive - University of North Carolina at Chapel Hill/WSP Proteomics Project")

```

# Load packages and datasets.
```{r message = FALSE, warning = FALSE}
# Load packages
library(readxl) # for reading in files
library(openxlsx) # for writing excel files
library(purrr) # for summary stats
library(tidyverse) # for data organization and manipulation
library(janitor) # for df cleaning

# Read in files.
Data <- read_excel("C:/Users/mnale/OneDrive - University of North Carolina at Chapel Hill/WSP Proteomics Project/data/DEMOGRAPHICS_FINAL.xlsx", sheet = "Smokescreen_Data_R")
```


Clean dataframe and subset specific columns.
```{r}
# Read in files.
Data <- read_excel("C:/Users/mnale/OneDrive - University of North Carolina at Chapel Hill/WSP Proteomics Project/data/DEMOGRAPHICS_FINAL.xlsx", sheet = "Smokescreen_Data_R")

# Remove all spaces, change all letters to lowercase, change '-' to '_'
Data <- clean_names(Data)

# Relabel the 'visit' classifications.
Data <- Data %>% 
  mutate(timepoint =
           case_when(
             visit == "Screen" ~ "Pre",
             visit == "Post" ~ "Post_6hr",
             visit == "FU" ~ "Post_24hr"
           ))

# Rename the m1 and m2 col names.
Data <- Data %>% 
  rename("percent_iNOS_sputum" = "percent_m1_sputum",
         "percent_CD301_sputum" = "percent_m2_sputum",
         "pmn_per_mg" = "sputum_pmn_cells_per_mg")

# Select the relevant cols.
Data <- Data %>% 
  select(c(subject, sex, timepoint, sputum_percent_pmn, pmn_per_mg
, il_1b_sputum, il_6_sputum, il_8_sputum, tn_fa_sputum,
           percent_iNOS_sputum, percent_CD301_sputum, neutrophils_percentage, il_1b_serum, il_6_serum, il_8_serum,
           tn_fa_serum))

# Log2 transform all data except percentages.
cols <- c("pmn_per_mg", "il_1b_sputum", "il_6_sputum", "il_8_sputum", "tn_fa_sputum",
          "il_1b_serum", "il_6_serum", "il_8_serum",
           "tn_fa_serum")

# Make a copy of my Data df for log2 transformations
Data_Log2 <- data.frame(Data)

Data_Log2[cols] <- (log2(Data_Log2[cols])) 
Data_Log2[cols] <- Data_Log2[cols] + 8 # Transform by +8 to keep the values all positive

# Some counts were zero and the log2 of 0 is undefined, so I am replacing the +/- Inf with NAs
Data_Log2[cols][sapply(Data_Log2[cols], is.infinite)] <- NA 

# Remove Post_6hr time point
Data_Log2 <- Data_Log2 %>% filter(timepoint == "Pre" | timepoint == "Post_24hr")

head(Data_Log2)
```

## 2-way ANOVAs

Run 2-way anovas for each cytokine, using timepoint and sex as independent variables. Should any p<0.06, I will run a Tukey Post-Hoc test. In this analysis, I will exclude rows that contain NAs.
```{r results = 'hide'}
# I will make an object that will run function x across each column beginning at column 4.
anova.results <- lapply(colnames(Data_Log2)[4:ncol(Data_Log2)], function(x) as.formula(paste0(x, " ~ timepoint * sex")))

# Now, we use the lapply() to incorporate our function into the aov() and generate the summary stats for each column variable.
# NOTE: NAs will be dropped automatically by aov()
res <- lapply(anova.results, function(x) summary(aov(x, data = Data_Log2)))
names(res) <- format(anova.results) 
res

# Based on out results, we can run a Tukey's Post-Hoc across The following variables:
# sputum_percent_pmn, il_1b_sputum ,il_6_sputum , il_8_sputum , neutrophils_percentage, tn_fa_sputum 
posthoc.results.1 <- lapply(colnames(Data_Log2)[c(4:9)], function(x) as.formula(paste0(x, " ~ timepoint * sex")))
res.posthoc.1 <-lapply(posthoc.results.1, function(x) TukeyHSD(aov(x, data = Data_Log2)))
names(res.posthoc.1) <- format(posthoc.results.1)
res.posthoc.1
```

Generate summary statistics across each variable.
```{r}
# Make a longer format of data.
Data_Log2_Long <- Data_Log2 %>% 
  pivot_longer(
    cols = sputum_percent_pmn:tn_fa_serum, 
    names_to = "variable",
    values_to = "value"
  )

Sum_Stats_Log2 <- Data_Log2_Long %>% 
  group_by(variable, timepoint, sex) %>% 
  summarise(
    mean = mean(value, na.rm = TRUE),
    sd = sd(value, na.rm = TRUE),
    n = sum(!is.na(value)),
    se = sd / sqrt(n),
    .groups = 'drop'
  )

head (Sum_Stats_Log2)
```

Clean up the final df using pivot_wider() and renaming the cols.
```{r}
Sum_Stats_Log2_Wide <- Sum_Stats_Log2 %>% 
 pivot_wider(names_from = timepoint, values_from = c(mean, sd, n, se)) 

oldnames = c("variable", "sex", "mean_Post_24hr",  "mean_Pre", "sd_Post_24hr", 
             "sd_Pre", "n_Post_24hr",  "n_Pre", "se_Post_24hr",  "se_Pre")

newnames = c("Variable", "Sex", "Post_24hr_Mean",  "Pre_Mean", "Post_24hr_SD", 
             "Pre_SD", "Post_24hr_N",  "Pre_N", "Post_24hr_SE",  "Pre_SE")

Sum_Stats_Log2_Wide <- Sum_Stats_Log2_Wide %>% rename_at(vars(oldnames), ~ newnames)

# Here is the final df
Sum_Stats_FINAL <- Sum_Stats_Log2_Wide %>% 
  select(Variable, Sex, Pre_Mean, Pre_SD, Pre_N, Pre_SE,
         Post_24hr_Mean, Post_24hr_SD, Post_24hr_N, Post_24hr_SE)

# Save dataframe 
write.xlsx(Sum_Stats_FINAL,"../output_FINAL/CellDiff_Cytokine_Sum_Stats_v2_08.12.2024.xlsx")
```
