
```{r}
setwd("C:/Users/mnale/OneDrive - University of North Carolina at Chapel Hill/WSP Proteomics Project/scripts")
Output = ("C:/Users/mnale/OneDrive - University of North Carolina at Chapel Hill/WSP Proteomics Project/output")

library(tidyverse)
library(reshape2)
library(rstatix)

#reading in file
data_long <- read.csv("C:/Users/mnale/OneDrive - University of North Carolina at Chapel Hill/WSP Proteomics Project/output/data_long_05.05.2023.csv")

data_wide <- read.csv("C:/Users/mnale/OneDrive - University of North Carolina at Chapel Hill/WSP Proteomics Project/output/data_wide_05.05.2023.csv")

#Note: GSTM1_Status is already in numeric where: 
#GSTM1 sufficient = 1, GSTM1 null = 0
#M = 1 and F = 0
#R = 1 and NR = 0

```


Now we will run partial F-Tests to figure out how well each polynomial model fits our data.
```{r}
proteins <- unique(data_wide$Protein_Name)
#proteins list will hold unique protein accession names from Protein_Accession column of the proteomics_df

F_Pvals <- data.frame()

for (i in 1:length(proteins)) {
  #head of for loop  defines a collection of objects such as the elements of a vector or a list
    
  data_wide_filtered <- data_wide %>%
  filter(Protein_Name == proteins[i])
#make a new data frame that looks within the data_wide and the filter function will retain all rows that satisfy the conditions when the Protein_Name variable is the same as the variable from the proteins list.
  
  Lin_Reg <- lm(Post ~ Pre, data = data_wide_filtered)
  Square_Reg <- lm(Post ~ poly(Pre, deg = 2, raw = FALSE), data = data_wide_filtered)
  Cube_Reg <- lm(Post ~ poly(Pre, deg = 3, raw = FALSE), data = data_wide_filtered)

  #use anovas to conduct a partial F-Test
  Squ_v_Cube <- anova(Square_Reg, Cube_Reg)
  Lin_v_Squ <- anova(Lin_Reg, Square_Reg)
  
  #Selecting the F test p-value from cell in row 2 under Pr(>F)
  Pval_Squ_v_Cube <- Squ_v_Cube[2, "Pr(>F)"] 
  Pval_Lin_v_Squ <- Lin_v_Squ[2, "Pr(>F)"]

  
  Protein_Name <- proteins[i] 
  
  Pvals <- data.frame(Protein_Name, Pval_Squ_v_Cube, Pval_Lin_v_Squ)
  F_Pvals <- rbind(F_Pvals, Pvals)
  
}

```


In my F-Pvals I will make a column identifying which model is the best for each protein. 
When analyzing the results of the partial F-Test, for example, anova(Square_Reg, Cube_Reg), if the P-value is > 0.05,
than we conclude that X^3 does NOT improve the model and we should go with the reduced model.
```{r}

F_Pvals$Model <- case_when(
  Pval_Squ_v_Cube < 0.05 ~ "Cubic",
  Pval_Squ_v_Cube > 0.05 & Pval_Lin_v_Squ < 0.05 ~ "Quadratic",
  Pval_Lin_v_Squ > 0.05 ~ "Linear"
)

#It looks like the linear regression will best the best model for all of my proteins

```


